stages:
  - build
  - deploy
  - test

build_prod_image:
  stage: build
  when: manual

  before_script:
    - source source.env
    - sudo podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - echo "Test build"
    - sudo buildah bud --no-cache -f Dockerfiles/Dockerfile -t $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build .

  after_script:
    - source source.env
    - echo "Test after"
    - sudo podman push $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build
    - sudo podman rmi $(sudo podman images | grep '<none>' | awk '{ print $3}')

#   except:
#     changes:
#       - .gitlab-ci.yml

  only:
    - master


deploy_slomap1_container:
  stage: deploy
  when: manual
  environment:
    name: slomap1-to-grafana
    url: https://grafana.nglm.rt.ru
  before_script:
    - source source.env
    - sudo podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - sudo podman stop $CI_ENVIRONMENT_NAME || echo "Container doesn't started"
    - sudo podman rm $CI_ENVIRONMENT_NAME || echo "Coniner doesn't exist"
    - sudo podman rmi $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest || echo "Image doesn't exist"
    - sudo podman tag $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest
    - sudo podman rmi $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build

  script:
    - sudo podman run -d --name=$CI_ENVIRONMENT_NAME --pod=$POD_NAME -e POSTGRES_PORT_FOR_ENV=$POSTGRES_PORT_FOR_ENV -e FDW_NAME=$FDW_NAME -e FDW_FOREIGN_SCHEMA=$FDW_FOREIGN_SCHEMA -e FDW_FOREIGN_SERVER=$FDW_FOREIGN_SERVER -e FDW_USER=$FDW_USER -e FDW_PASS=$FDW_PASS -e FDW_SCHEMA=$FDW_SCHEMA  $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest

  except:
    changes:
      - .gitlab-ci.yml

  only:
    - master

deploy_spvprod_container:
  stage: deploy
  when: manual
  environment:
    name: spvprod-to-grafana
    url: https://grafana.nglm.rt.ru
  before_script:
    - source source.env
    - sudo podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - sudo podman stop $CI_ENVIRONMENT_NAME || echo "Container doesn't started"
    - sudo podman rm $CI_ENVIRONMENT_NAME || echo "Coniner doesn't exist"
    - sudo podman rmi $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest || echo "Image doesn't exist"
    - sudo podman tag $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest
    - sudo podman rmi $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:build

  script:
    - sudo podman run -d --name=$CI_ENVIRONMENT_NAME --pod=$POD_NAME -e POSTGRES_PORT_FOR_ENV=$POSTGRES_PORT_FOR_ENV -e FDW_NAME=$FDW_NAME -e FDW_FOREIGN_SCHEMA=$FDW_FOREIGN_SCHEMA -e FDW_FOREIGN_SERVER=$FDW_FOREIGN_SERVER -e FDW_USER=$FDW_USER -e FDW_PASS=$FDW_PASS -e FDW_SCHEMA=$FDW_SCHEMA  $CI_REGISTRY_IMAGE/$POSTGRES_IMAGE:latest

  except:
    changes:
      - .gitlab-ci.yml

  only:
    - master

test:
  stage: test
  when: manual
  before_script:
    - source source.env

  script:
    - first: |
        date 
        -r 2
    

  only:
    - master